**Lecture 1: Introduction to Real-Time Data Analysis**

* Definition and importance of real-time data analysis
* Overview of challenges in real-time data analysis (latency, 
scalability, noise)
* Types of real-time data sources:
 + IoT devices
 + Social media platforms
 + Financial markets
 + Sensor networks
* Lecture objectives:
 + Understand the concept of real-time data analysis
 + Identify key challenges and types of real-time data sources

**Lecture 2: Data Ingestion and Processing for Real-Time Analysis**

* Overview of data ingestion pipelines (e.g., Apache Kafka, AWS 
Kinesis)
* Data processing frameworks for real-time analysis (e.g., Apache 
Spark, Apache Flink)
* Discussion of batch vs. stream processing
* Lecture objectives:
 + Understand the importance of efficient data ingestion and 
processing
 + Learn about common data processing frameworks

**Lecture 3: Real-Time Data Analysis Techniques**

* Introduction to machine learning algorithms for real-time analysis 
(e.g., decision trees, clustering)
* Deep learning applications for real-time analysis (e.g., neural 
networks, convolutional networks)
* Time series forecasting techniques (e.g., ARIMA, LSTM)
* Lecture objectives:
 + Understand machine learning and deep learning applications in 
real-time data analysis
 + Learn about time series forecasting techniques

**Lecture 4: Real-Time Data Visualization and Communication**

* Importance of effective visualization for real-time insights
* Overview of data visualization tools and libraries (e.g., Tableau, 
Matplotlib)
* Best practices for presenting real-time data to stakeholders
* Discussion of storytelling in data analysis
* Lecture objectives:
 + Understand the importance of visualizing real-time data
 + Learn about data visualization best practices

**Lecture 5: Case Studies and Implementation**

* Real-world case studies of successful real-time data analysis 
applications (e.g., finance, healthcare, IoT)
* Group project: students will work in groups to implement a simple 
real-time data analysis pipeline using Python or R
* Discussion of common pitfalls and lessons learned from real-world 
implementations
* Lecture objectives:
 + Apply theoretical knowledge to real-world scenarios
 + Develop practical skills for implementing real-time data analysis 
pipelines

Throughout the lectures, I'll incorporate interactive elements, such as:

* Group discussions and debates
* Hands-on exercises and coding challenges
* Real-world case studies and group projects
* Visual aids (e.g., slides, videos) to illustrate key concepts and 
techniques.

This comprehensive lecture plan will provide students with a solid 
foundation in real-time data analysis, covering the technical aspects of 
data ingestion, processing, and visualization, as well as practical 
applications and best practices.



## Nowy program przedmiotu

1. Batch vs. Real-Time vs. Streaming Analytics ‚Äì R√≥≈ºnice miƒôdzy trybami przetwarzania danych, kluczowe koncepcje i zastosowania.
2. Modele przetwarzania danych w Big Data ‚Äì Od plik√≥w p≈Çaskich do Data Lake, wady i zalety podej≈õcia real-time. Mity i fakty o przetwarzaniu w czasie rzeczywistym.
3. Architektura IT dla przetwarzania w czasie rzeczywistym ‚Äì Om√≥wienie architektur Lambda i Kappa w kontek≈õcie strumieniowego przetwarzania danych.
4. Systemy przetwarzania danych w czasie rzeczywistym ‚Äì PrzeglƒÖd technologii: Apache Kafka, Apache Spark Streaming, Apache Flink i ich zastosowania w Pythonie.
5. Podstawy uczenia maszynowego w czasie rzeczywistym ‚Äì Por√≥wnanie offline learning vs. online learning, problemy zwiƒÖzane z przyrostowym uczeniem maszynowym.

üßë‚Äçüè´ Wyk≈Çady (teoria + case study z biznesu)

1Ô∏è‚É£ Wprowadzenie: Ewolucja analizy danych
Dane strukturyzowane (SQL, Pandas) vs. nieustrukturyzowane (teksty, obrazy, grafy).
Przetwarzanie wsadowe (batch processing) vs. strumieniowe (stream processing).
Case study: Jak firmy przechodzƒÖ od tabel do analizy strumieniowej?

2Ô∏è‚É£ Systemy przetwarzania danych w czasie rzeczywistym
Modele danych: relacyjne (PostgreSQL), grafowe (NetworkX), strumieniowe (Kafka).
Lambda i Kappa Architecture ‚Äì r√≥≈ºnice i zastosowania.
Case study: Rekomendacje produktowe w e-commerce.

3Ô∏è‚É£ Modele ML/DL dla danych w czasie rzeczywistym
Uczenie wsadowe (batch) vs. przyrostowe (online learning).
Stochastic Gradient Descent (SGD) ‚Äì podstawa ML na strumieniach.
Case study: Klasyfikacja oszustw w czasie rzeczywistym.

4Ô∏è‚É£ Obiektowe programowanie w Pythonie w kontek≈õcie ML
Struktury klasowe dla modeli ML.
Tworzenie pipeline'√≥w ML w Pythonie.
Case study: Klasyfikacja wiadomo≈õci jako SPAM/NON-SPAM w strumieniu tekst√≥w.

5Ô∏è‚É£ Tworzenie API z regu≈Çami decyzyjnymi i ML
Budowa API w FastAPI dla modelu ML.
Integracja modelu klasyfikacji z systemem decyzyjnym.
Case study: System wykrywania anomalii w logach serwerowych.

